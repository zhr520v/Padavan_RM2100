name: CI

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (required for creating a release)'
        required: true
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'     
        required: false
        default: 'no'

jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    env:
      build_variant: "mt7621"
      target: "RM2100"
      images_dir: /opt/images

    steps:
      - uses: actions/checkout@v2
      
      - name: Prepare environment
        run: |
          sudo apt update
          sudo apt install libtool-bin gperf python3-docutils autopoint gettext
      
      - name: Run shellcheck
        run: sh ./trunk/tools/shellcheck.sh
      
      - name: Prepare toolchain
        run: |
          cd toolchain-mipsel
          sh dl_toolchain.sh
      
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event.inputs.debug_enabled == 'yes' }}
        with:
          limit-access-to-actor: true
      
      - name: Start build
        run: |
          cd trunk
          mkdir -p ${images_dir}
          fakeroot ./build_firmware_ci $target
          if [ $? = 0 ]; then
            cp -f images/*.trx ${images_dir}/$target.trx
          else
            exit 1
          fi
      
      - name: Create archive
        if: success()
        run: |
          ls -lh ${images_dir}
          GIT_VERSION=`git rev-parse --short=7 HEAD 2>/dev/null` && [ -n "$GIT_VERSION" ] && \
          image_name=images_${build_variant}_${GIT_VERSION} || image_name=images_${build_variant}
          cd ${images_dir}
          md5sum *.trx | tee md5sum.txt
          7z a -mx=9 ${image_name}.7z ./*
          echo "image_name=${image_name}" >> $GITHUB_ENV
      
      - name: Upload images to Artifact
        if: success()
        uses: actions/upload-artifact@v2.2.1
        with:
          name: ${{ env.image_name }}
          path: ${{ env.images_dir }}/*.7z
      
      - name: Create Release
        if: success()
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          release_name: Release ${{ github.event.inputs.release_tag }}
          draft: false
          prerelease: false

      - name: Upload images to Release
        if: success()
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.images_dir }}/${{ env.target }}.trx
          asset_name: ${{ env.target }}.trx
          asset_content_type: application/octet-stream
